---
preview: Данные в формате представляют собой:
* JavaScript-объекты { ... }  или
* Массивы [ ... ]  или
* Значения одного из типов:
   * строки в двойных кавычках,
	 * число,
	 * логическое значение true/false,
   * null
   
title: JSON
tags: js, json, 
author: yemelyanow-ross
date: 2017-11-25 21:32:00
---
Методы: 

JSON.parse(str)  - переводит строку с данными в формате JSON в JavaScript-объект/массив/значение
```
let numbers = "[0, 1, 2, 3]";

numbers = JSON.parse(numbers);

alert( numbers[1] ); // 1
```

```
var user = '{ "name": "Вася", "age": 35, "isAdmin": false, "friends": [0,1,2,3] }';

user = JSON.parse(user);

alert( user.friends[1] ); // 1
```

JSON.parse(str, reviver) - где reviver - функция function(key, value). При парсинге JSON.parse передаёт ей все пары ключ: значение, а она либо возвращает преобразованное значение либо undefined, если его нужно пропустить.

```
var str = '{"title":"Конференция","date":"2014-11-30T12:00:00.000Z"}';

var event = JSON.parse(str);

alert( event.date.getDate() ); // ошибка! т.к. event.date здесь строка, а не обьект!!!
```
с помощью  reviver:
```
var str = '{"title":"Конференция","date":"2014-11-30T12:00:00.000Z"}';

var event = JSON.parse(str, function(key, value) {
  if (key == 'date') return new Date(value);
  return value;
});

alert( event.date.getDate() );
```